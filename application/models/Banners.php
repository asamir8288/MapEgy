<?php

/**
 * Banners
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Banners extends BaseBanners {

    public function addBanner(array $data) {
        $errors = $this->__validateBanner();
        if ($errors['error_flag']) {
            return $errors;
        } else {
            $is_active = false;
            if (isset($data['is_active'])) {
                $is_active = true;
            }
            $set_at_homepage = false;
            if (isset($data['set_at_homepage'])) {
                $set_at_homepage = true;
            }

            $b = new Banners();
            $b->file_name = $errors['file_name'];
            $b->displaying_place = $data['displaying_place'];
            $b->is_active = $is_active;
            $b->set_at_homepage = $set_at_homepage;
            $b->created_at = date('ymdHis');
            $b->save();

            return $errors;
        }
    }

    public function deleteBanner($banner_id) {
        Doctrine_Query::create()
                ->delete('Banners b')
                ->where('b.id =?', $banner_id)
                ->execute();
    }

    private function __validateBanner() {
        $errors = array();
        $error_flag = false;

        $upload_data = upload_file('banners', array('jpg|png|jpeg|gif'), '2028');
        if ($upload_data['error_flag']) {
            $errors['file_name'] = $upload_data['errors'];
            $error_flag = true;
        } else {
            $errors['file_name'] = $upload_data['upload_data']['file_name'];
        }

        $errors['error_flag'] = $error_flag;

        return $errors;
    }

    public function activateDeactivateBanner($banner_id) {
        $currentBannerStatus = $this->getCurrentBannerStatus($banner_id);
        $new_status = TRUE;
        if ($currentBannerStatus)
            $new_status = FALSE;

        Doctrine_Query::create()
                ->update('Banners b')
                ->set('b.is_active', '?', $new_status)
                ->where('b.id =?', $banner_id)
                ->execute();
    }
    
    public function setUnsetAtHomepage($_id) {
        $currentBannerStatus = $this->getCurrentItemStatus($_id);
        
        $new_status = TRUE;
        if ($currentBannerStatus)
            $new_status = FALSE;
        
        Doctrine_Query::create()
                ->update('Banners b')
                ->set('b.set_at_homepage', '?', $new_status)
                ->where('b.id =?', $_id)
                ->execute();
    }

    public function banner_sorting(array $data) {
        for ($i = 0; $i < count($data['order_flag']); $i++) {
            Doctrine_Query::create()
                    ->update('Banners b')
                    ->set('b.order_flag', '?', $i)
                    ->where('b.id =?', $data['order_flag'][$i])
                    ->execute();
        }
    }

    private function getCurrentBannerStatus($banner_id) {
        return Doctrine_Query::create()
                        ->select('b.is_active')
                        ->from('Banners b')
                        ->where('b.id =?', $banner_id)
                        ->setHydrationMode(Doctrine::HYDRATE_SINGLE_SCALAR)
                        ->fetchOne();
    }

    private function getCurrentItemStatus($banner_id) {
        return Doctrine_Query::create()
                        ->select('b.set_at_homepage')
                        ->from('Banners b')
                        ->where('b.id =?', $banner_id)
                        ->setHydrationMode(Doctrine::HYDRATE_SINGLE_SCALAR)
                        ->fetchOne();
    }

}
